main(model) ::= <<
import { Component, Input, OnInit } from '@angular/core';
import { ActivatedRoute, Params } from '@angular/router';
import { MatDialog } from '@angular/material/dialog';

import { ConvertStringTo } from '../core/converter.helper';

import { $model.Entity.Name$ } from '../$model.Entity.NameKebab$-core/$model.Entity.NameKebab$.model';
import { $model.Entity.Name$Service } from '../$model.Entity.NameKebab$-core/$model.Entity.NameKebab$.service';
import { $model.Entity.Name$EditComponent } from './$model.Entity.NameKebab$-edit.component';

@Component({
    selector: 'app-$model.Entity.NameKebab$-view',
    templateUrl: './$model.Entity.NameKebab$-view.component.html',
    styleUrls: ['./$model.Entity.NameKebab$-view.component.scss']
})
export class $model.Entity.Name$ViewComponent implements OnInit {
    id: $model.Entity.IdField.JsTypeName$;
    $model.Entity.NameLower$: $model.Entity.Name$;

    constructor(private dialog: MatDialog,
                private $model.Entity.NameLower$Service: $model.Entity.Name$Service,
                private route: ActivatedRoute) {
    }

    ngOnInit(): void {
        this.route.params.forEach((params: Params) => {
            this.id = ConvertStringTo.$model.Entity.IdField.JsTypeName$(params.id);
            this.get$model.Entity.Name$();
        });
    }

    private async get$model.Entity.Name$() {
        this.$model.Entity.NameLower$ = await this.$model.Entity.NameLower$Service.get$model.Entity.Name$({ id: this.id });
    }

    onEdit() {
        this.openDialog().then((result) => {
            if (result) {
                this.get$model.Entity.Name$();
            }
        });
    }

    private openDialog(): Promise<any> {
        const dialogRef = this.dialog.open($model.Entity.Name$EditComponent, {
            width: '600px',
            data: { id: this.id }
        });
        return dialogRef.afterClosed().toPromise();
    }

    onBack(): void {
        window.history.back();
    }
}

>>
